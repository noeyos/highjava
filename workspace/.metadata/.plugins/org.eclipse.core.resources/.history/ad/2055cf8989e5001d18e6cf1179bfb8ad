package kr.or.ddit.basic;

/*
	
	Thread의 stop()메서드를 호출하면 해당 스레드가 바로 멈춘다.

*/
public class ThreadtTest11 {

	public static void main(String[] args) {
		
		/*
		ThreadStopTest1 th1 = new ThreadStopTest1();
		th1.start();
		
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			
		}
		
		// th1.stop();
		th1.setStop(true);
		*/
		
		
		// interrupt()메서드를 이용한 스레드 멈추기
		ThreadStopTest2 thread2 = new ThreadStopTest2();
		thread2.start();
		try {
			Thread.sleep(10);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		thread2.interrupt();

		

	}

}

class ThreadStopTest1 extends Thread {
	private boolean stop;
	
	public void setStop(boolean stop) {
		this.stop = stop;
	}
	
	@Override
	public void run() {
		while(!stop) {
			System.out.println("스레드 실행 중.");
		}
		
		System.out.println("자원 정리.");
		System.out.println("스레드 종료.");
	}
}



// interrupt()메서드를 이용하여 스레드를 멈추게 하는 연습용 스레드
class ThreadStopTest2 extends Thread {
	
	@Override
	public void run() {
		// 방법 1 ==> interrupt()메서드와 sleep()메서드를 이용하는 방법
		try {
			while(true) {
				System.out.println("작업 실행 중.");
				Thread.sleep(1);
			}
		} catch (InterruptedException e) {
			
		}
		System.out.println("자원 정리");
		System.out.println("스레드 종료");

	
	}
}